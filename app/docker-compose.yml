version: '3.9'
services:
  frontend:
    build: ./frontend
    ports:
      - 3000:3000
    platform: linux/x86_64
    working_dir: /app-frontend
    depends_on:
      backend:
        condition: service_healthy
    # Os `healthcheck` devem garantir que a aplicação
    # está operacional, antes de liberar o container
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3000"]  # Caso utilize outra porta interna para o front, altere ela aqui também
      timeout: 10s
      retries: 5
  backend:
    container_name: app_backend
    build: ./backend
    ports:
      - 3001:3001
    platform: linux/x86_64
    working_dir: /app-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      - APP_PORT=3001
      # Os dados abaixo se referem ao container `db`
      # Dica: Relembre aqui da comunicação interna entre containers
      - DB_USER=root
      - DB_PASS=123456
      - DB_HOST=db
      - DB_PORT=5432
    healthcheck:
      test: ["CMD", "lsof", "-t", "-i:3001"] # Caso utilize outra porta interna para o back, altere ela aqui também
      timeout: 10s
      retries: 5
  db:
        image: postgres
        restart: always
        container_name: db
        platform: linux/x86_64
        logging:
          options:
            max-size: 10m
            max-file: "3"
        ports:
          - 5432:5432
        environment:
        - POSTGRES_PASSWORD=123456
        - POSTGRES_USER=root
        healthcheck:
         test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
         timeout: 10s
         retries: 5
        cap_add:
        - SYS_NICE # Deve omitir alertas menores